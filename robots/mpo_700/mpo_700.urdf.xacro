<?xml version="1.0"?>
<!-- This is the main URDF file for mpo_700-->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="mpo_700">

    <!--set use_gazebo = false for implementation on real rover-->
    <xacro:arg name="use_gazebo" default="true"/>

    <!--set arm name to include the arm in the simulation-->
    <xacro:arg name="arm" default=""/>

    <!-- Model Scale -->
    <xacro:property name="model_scale" value="0.001 0.001 0.001" />

    <!-- Base Properties -->
    <xacro:property name= "base_link_mass" value="140" />

    <!-- Wheel Properties -->
    <xacro:property name="wheel_link_mass" value="1.2" />

    <!-- caster Wheel Properties -->
    <xacro:property name="caster_inertial_value" value="0.27258101" />
    <xacro:property name="caster_link_mass" value="12.7" />

    <!-- OmniDriveModule(ODM) joint type for both wheels and casters -->
    <xacro:property name="ODM_joint_type" value="fixed"/>

    <!-- Arm properties-->
    <xacro:property name="arm_name" value="$(arg arm)"/>
    <xacro:property name="use_arm" value="false"/>

    <!-- import main body description -->
    <xacro:include filename="$(find neo_simulation2)/robots/mpo_700/urdf/mpo_700_body.urdf.xacro"/>
 
    <!-- If Simulation is used -->
    <xacro:if value="$(arg use_gazebo)">
        <xacro:include filename="$(find neo_simulation2)/robots/mpo_700/urdf/mpo_700_gazebo.urdf.xacro"/>
    </xacro:if>

    <!-- Check if one of the arms is used -->
    <xacro:if value="${arm_name == 'ur5' or arm_name == 'ur10' or arm_name == 'ur5e' or arm_name == 'ur10e' or arm_name == 'ec66' or arm_name == 'cs66'}">
        <xacro:property name="use_arm" value="true"/>
    </xacro:if>

    <!-- If Arm is used -->
    <xacro:if value="${use_arm}">
        <!-- cabinet link -->
        <joint name="cabinet_joint" type="fixed">
            <origin rpy="0 0 0" xyz="0.025 0 0.35"/>
            <joint_properties damping="1" friction="1"/>
            <parent link="base_link"/>
            <child link="cabinet_link"/>
        </joint>

        <link name="cabinet_link">
            <inertial>
                <mass value="2"/>
                <origin rpy="0 0 -1.5708" xyz="0 0 0"/>
                <inertia ixx="0.457072" ixy="0.0" ixz="0.0" iyy="0.23616" iyz="0.0" izz="0.686"/>
            </inertial>
            <visual>
                <origin rpy="0 0 -1.5708" xyz="0 0 0"/>
                <geometry>
                    <mesh filename="package://neo_simulation2/robots/mpo_700/meshes/cabin.dae" scale="${model_scale}"/>
                </geometry>
            </visual>
            <collision>
            <origin rpy="0 0 -1.5708" xyz="0. 0. 0"/>
                <geometry>
                    <mesh filename="package://neo_simulation2/robots/mpo_700/meshes/cabin.dae" scale="${model_scale}"/>
                </geometry>
            </collision>
        </link>

        <!-- Universal Robotics Arms-->
        <xacro:if value="${arm_name == 'ur5' or arm_name == 'ur10' or arm_name == 'ur5e' or arm_name == 'ur10e'}">
            <!-- UR arm parameters -->
            <xacro:arg name="tf_prefix" default="${arm_name}" />
            <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/$(arg arm)/joint_limits.yaml"/>
            <xacro:arg name="kinematics_params" default="$(find ur_description)/config/$(arg arm)/default_kinematics.yaml"/>
            <xacro:arg name="physical_params" default="$(find ur_description)/config/$(arg arm)/physical_parameters.yaml"/>
            <xacro:arg name="visual_params" default="$(find ur_description)/config/$(arg arm)/visual_parameters.yaml"/>
            <xacro:arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface"/>
            <xacro:arg name="safety_limits" default="false"/>
            <xacro:arg name="safety_pos_margin" default="0.15"/>
            <xacro:arg name="safety_k_position" default="20"/>
            <xacro:arg name="force_abs_paths" default="true" />
            <xacro:arg name="simulation_controllers" default="$(find ur_simulation_gazebo)/config/ur_controllers.yaml" />
            <xacro:arg name="initial_joint_positions_file" default="$(find ur_description)/config/initial_positions.yaml"/>

            <!-- create arm -->
            <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>
            <xacro:ur_robot name="${arm_name}"
                            parent="cabinet_link"
                            tf_prefix="$(arg tf_prefix)"
                            joint_limits_parameters_file="$(arg joint_limit_params)"
                            kinematics_parameters_file="$(arg kinematics_params)"
                            physical_parameters_file="$(arg physical_params)"
                            visual_parameters_file="$(arg visual_params)"
                            safety_limits="$(arg safety_limits)"
                            safety_pos_margin="$(arg safety_pos_margin)"
                            safety_k_position="$(arg safety_k_position)"
                            force_abs_paths="$(arg force_abs_paths)"
                            >
                <!-- position robot in the world -->
                <origin xyz="0.133 0.0 0.416" rpy="0.0 0.0 -1.5708" />
            </xacro:ur_robot>

            <!-- If both UR Arm and Simulation is used -->
            <xacro:if value="$(arg use_gazebo)">
                <xacro:include filename="$(find ur_simulation_gazebo)/urdf/ur_gazebo.ros2_control.xacro">
                    <parameters>$(arg simulation_controllers)</parameters>
                </xacro:include>

                <gazebo reference="cabinet_link"></gazebo>

                <gazebo>
                    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
                        <parameters>$(arg simulation_controllers)</parameters>
                    </plugin>
                </gazebo>
                <!-- ros2 control instance -->
                <xacro:ur_ros2_control
                    name="$(arg arm)"
                    tf_prefix="$(arg tf_prefix)"
                    transmission_hw_interface="$(arg transmission_hw_interface)"
                    initial_positions="${xacro.load_yaml('$(arg initial_joint_positions_file)')}"
                />
            </xacro:if>
        </xacro:if>

        <!-- Elite Arm -->
        <xacro:if value="${arm_name == 'ec66' or arm_name == 'cs66'}">

        <!--Elite arm parameters-->
        <xacro:arg name="tf_prefix" default="${arm_name}"/>
        <xacro:arg name="joint_limit_params_file" default="$(find elite_description)/config/$(arg arm)/joint_limits.yaml"/>
        <xacro:arg name="joint_origin_params_file" default="$(find elite_description)/config/$(arg arm)/joint_origins.yaml"/>
        <xacro:arg name="link_inertials_params_file" default="$(find elite_description)/config/$(arg arm)/link_inertials.yaml"/>
        <xacro:arg name="initial_joint_positions_file" default="$(find elite_description)/config/$(arg arm)/initial_positions.yaml"/>

            <!-- create arm -->
            <xacro:include filename="$(find elite_description)/urdf/macro/elite_macro.xacro" />
            <xacro:elite_robot 
                name="$(arg arm)"
                tf_prefix="$(arg tf_prefix)"
                arm_parent="cabinet_link"
                joint_limits_parameters_file="$(arg joint_limit_params_file)"
                joint_origins_parameters_file="$(arg joint_origin_params_file)"
                link_inertials_parameters_file="$(arg link_inertials_params_file)"
            >
                <origin xyz="0.133 0.0 0.416" rpy="0.0 0.0 -1.5708" />
            </xacro:elite_robot>

            <!-- If both Elite Arm and Simulation is used -->
            <xacro:if value="$(arg use_gazebo)">
                <xacro:include filename="$(find elite_description)/urdf/elite_gazebo_ros2_control.urdf.xacro" />
            </xacro:if>  
        </xacro:if>  
    </xacro:if>
      <!-- SENSORS -->
      <!-- Sick S300 - Comment/Uncomment if required -->
      <!-- <xacro:include filename="$(find neo_simulation2)/robots/mpo_700/xacros/sick_S300.xacro" /> -->
</robot>
